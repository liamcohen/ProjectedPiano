<?xml version="1.0" encoding="UTF-8"?>
<RootFolder label="COREGEN" treetype="folder" language="COREGEN">
	<Folder label="VERILOG Component Instantiation" treetype="folder">
		<Template label="FIFO" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
FIFO YourInstanceName (
    .clk(clk),
    .din(din), // Bus [7 : 0] 
    .rd_en(rd_en),
    .rst(rst),
    .wr_en(wr_en),
    .data_count(data_count), // Bus [3 : 0] 
    .dout(dout), // Bus [7 : 0] 
    .empty(empty),
    .full(full),
    .overflow(overflow),
    .valid(valid),
    .underflow(underflow),
    .wr_ack(wr_ack));

 
		</Template>
		<Template label="reg_rom" treetype="template">
		</Template>
		<Template label="memory" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
memory YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [7 : 0] 
    .douta(douta)); // Bus [15 : 0] 

 
		</Template>
		<Template label="RAM" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
RAM YourInstanceName (
    .clka(clka),
    .dina(dina), // Bus [7 : 0] 
    .addra(addra), // Bus [7 : 0] 
    .wea(wea), // Bus [0 : 0] 
    .douta(douta)); // Bus [7 : 0] 

 
		</Template>
		<Template label="ROM" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
ROM YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [7 : 0] 
    .douta(douta)); // Bus [15 : 0] 

 
		</Template>
	</Folder>
	<Folder label="VHDL Component Instantiation" treetype="folder">
		<Template label="FIFO" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component FIFO
    port (
    clk: IN std_logic;
    din: IN std_logic_VECTOR(7 downto 0);
    rd_en: IN std_logic;
    rst: IN std_logic;
    wr_en: IN std_logic;
    data_count: OUT std_logic_VECTOR(3 downto 0);
    dout: OUT std_logic_VECTOR(7 downto 0);
    empty: OUT std_logic;
    full: OUT std_logic;
    overflow: OUT std_logic;
    valid: OUT std_logic;
    underflow: OUT std_logic;
    wr_ack: OUT std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : FIFO
        port map (
            clk =&gt; clk,
            din =&gt; din,
            rd_en =&gt; rd_en,
            rst =&gt; rst,
            wr_en =&gt; wr_en,
            data_count =&gt; data_count,
            dout =&gt; dout,
            empty =&gt; empty,
            full =&gt; full,
            overflow =&gt; overflow,
            valid =&gt; valid,
            underflow =&gt; underflow,
            wr_ack =&gt; wr_ack);
 
		</Template>
		<Template label="reg_rom" treetype="template">
		</Template>
		<Template label="memory" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component memory
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(7 downto 0);
    douta: OUT std_logic_VECTOR(15 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : memory
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="RAM" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component RAM
    port (
    clka: IN std_logic;
    dina: IN std_logic_VECTOR(7 downto 0);
    addra: IN std_logic_VECTOR(7 downto 0);
    wea: IN std_logic_VECTOR(0 downto 0);
    douta: OUT std_logic_VECTOR(7 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : RAM
        port map (
            clka =&gt; clka,
            dina =&gt; dina,
            addra =&gt; addra,
            wea =&gt; wea,
            douta =&gt; douta);
 
		</Template>
		<Template label="ROM" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component ROM
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(7 downto 0);
    douta: OUT std_logic_VECTOR(15 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : ROM
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
	</Folder>
</RootFolder>
